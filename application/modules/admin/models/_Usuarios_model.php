<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Usuarios_model extends CI_Model {    public function __construct() {        parent::__construct();    }    public function buscar_password_mdl() {        $usu_id = $this->input->post('usu_id');        $password = $this->input->post('password');        if ($password != '' && $usu_id > 0) {            $this->db->where('usu_contrasena', $password);            $this->db->where('usu_id', $usu_id);            $query = $this->db->get('admin_contrasena');            if ($query->num_rows() > 0) {                return true;            } else                return false;        } else            return false;    }    public function ultimo_password_mdl($usu_id) {        $clave = "";        $sql = "SELECT `usu_contrasena` FROM `admin_contrasena` WHERE `usu_id` ='$usu_id' ORDER BY id DESC LIMIT 0,1";        $query = $this->db->query($sql);        if ($query->num_rows() > 0)            $clave = $query->row()->usu_contrasena;        return $clave;    }    public function usuario_superadmin($usu_id) {        $usu_adm = datoDeTabla("admin_usuarios", "usu_adm", $usu_id);        $usu_adm_doc = datoDeTabla("admin_usuarios", "usu_adm_doc", $usu_id);        $usu_rd = datoDeTabla("admin_usuarios", "usu_rd", $usu_id);        $usu_adm_sgi = datoDeTabla("admin_usuarios", "usu_adm_sgi", $usu_id);        $usu_adm_sgp = datoDeTabla("admin_usuarios", "usu_adm_sgp", $usu_id);        $usu_adm_pi = datoDeTabla("admin_usuarios", "usu_adm_pi", $usu_id);        if ($usu_adm == 's' && $usu_adm_doc == 's' && $usu_rd == 's' && $usu_adm_sgi == 's' && $usu_adm_sgp == 's' && $usu_adm_pi == 's')            return true;        else            return false;    }//listar usuarios    public function index_mdl() {        $w_buscar = $this->input->post('w_buscar');        $desde = $this->input->post('desde');        $buscar = $w_buscar . '%';                if ($desde == "")            $desde = 0;        $paginado = $html = "";        $cuantos = cuantosResultados();        $estado = $this->input->post('usu_activo');        if ($estado == "")            $estado = 's';        if ($estado == 't')            $where2 = "1";        else            $where2 = "`usu_activo` like '$estado'";        if (strlen($w_buscar) > 3) {            $campos = "`usu_nombres`,`usu_apellidos`,`usu_email`";            $where = "WHERE MATCH ($campos) AGAINST ('$buscar' IN BOOLEAN MODE)";            $order_by = "ORDER BY `puntos` DESC";            $sql = "SELECT *, MATCH($campos) AGAINST ('$buscar') AS 'puntos' from `admin_usuarios` $where AND $where2 $order_by";        } else            $sql = "SELECT * FROM `admin_usuarios` WHERE 1 AND $where2 ";        $paginado = paginador_multiple($sql, $cuantos, $desde);        $desde*=$cuantos;        $sql_limit = $sql . " limit $desde,$cuantos";        $query = $this->db->query($sql_limit);        if ($query->num_rows() > 0) {            $html = "";            foreach ($query->result() as $fila) {                if ($fila->usu_activo == "n")                    $fila->estado = "<a href='#' title='Usuario inactivo'><color='red'>+</color></a>";                else                    $fila->estado = "";                $html.= $this->parser->parse('admin/usuarios/index_tpl', $fila, TRUE);            }        } else {            $html.="<tr><td colspan='5'>No hay usuarios (<strong>$w_buscar</strong>)</td></tr>";        }        $arreglo["cmb_estado"] = $this->combo_estado($estado);        $arreglo["w_buscar"] = $w_buscar;        $arreglo["html"] = $html;        $arreglo["paginado"] = $paginado;        return $arreglo;    }// almacenar usuario nuevo    public function almacenar_mdl() {        $password_normal = $this->input->post('usu_contrasena');        $password = hash('sha256', $this->input->post('usu_contrasena').SALT);        $arreglo = array(            "usu_nombres" => $this->input->post('usu_nombres'),            "usu_apellidos" => $this->input->post('usu_apellidos'),            "usu_hojavida" => $this->input->post('usu_hojavida'),            "usu_email" => $this->input->post('usu_email'),            "usu_contrasena" => $password,            "usu_adm" => $this->input->post('usu_adm'),            "usu_activo" => "s"        );        $this->db->insert('admin_usuarios', $arreglo);        $usu_id = $this->db->insert_id();// guardar contraseÃ±a        //$this->nuevo_password($usu_id, $password_normal);        return $usu_id;    }    public function actualizar_mdl() {        $id = $this->input->post('usu_id');        $usu_activo = $this->input->post('usu_activo');        if ($usu_activo != 's')            $usu_activo = 'n';        $password = $this->input->post('usu_contrasena');        if ($password != "") {            $arreglo = array(                "usu_nombres" => $this->input->post('usu_nombres'),                "usu_apellidos" => $this->input->post('usu_apellidos'),                "usu_hojavida" => $this->input->post('usu_hojavida'),                "usu_email" => $this->input->post('usu_email'),                "usu_contrasena" => hash('sha256', $this->input->post('usu_contrasena').SALT),                "usu_adm" => $this->input->post('usu_adm'),                "usu_activo" => $usu_activo,            );            //$this->nuevo_password($id, $password);        } else            $arreglo = array(                "usu_nombres" => $this->input->post('usu_nombres'),                "usu_apellidos" => $this->input->post('usu_apellidos'),                "usu_email" => $this->input->post('usu_email'),                "usu_adm" => $this->input->post('usu_adm'),                "usu_activo" => $usu_activo,            );        $this->db->where('id', $id);        $this->db->update('admin_usuarios', $arreglo);    }    public function actualizar_password_mdl() {// cifrar el passwd        $password = $this->input->post('usu_contrasena');        $password_normal = $password;        $usu_id = $this->input->post('usu_id');        $this->nuevo_password($usu_id, $password_normal);    }    public function nuevo_password($usu_id, $password_normal) {        $arr_n = array(            "usu_id" => $usu_id,            "usu_contrasena" => $password_normal,            "con_fecha" => hoy('c')        );        $this->db->insert("admin_contrasena", $arr_n);        $tiempo = rand($this->config->item('con_pass_dias_min'), $this->config->item('con_pass_dias_max'));        $usu_fecha_contrasena = datoDeTabla("admin_usuarios", "usu_fecha_contrasena", $usu_id);        if ($usu_fecha_contrasena == '0000-00-00')            $fechacaducidad = diamas(hoy(), $tiempo);        else            $fechacaducidad = diamas($usu_fecha_contrasena, $tiempo);        $arreglo = array(            "usu_contrasena" => hash('sha256', $password_normal.SALT),            "usu_fecha_contrasena" => $fechacaducidad,        );        $this->db->where('id', $usu_id);        $this->db->update('admin_usuarios', $arreglo);    }    public function eliminar_mdl() {        $id = $this->uri->segment(4);        $data = array(            'usu_activo' => 'n'        );        $this->db->where('id', $id);        $this->db->update("admin_usuarios", $data);    }    public function datos_usuario($id) {        $this->db->where("id", $id);        $query = $this->db->get('admin_usuarios');        if ($query->num_rows() > 0)            return $query->row_array();        else            return "Sin datos ($id)";    }    public function combo_estado($estado) {        $op1 = $op2 = $op3 = "";        switch ($estado) {            case 't':$op1 = "selected";                break;            case 's':$op2 = "selected";                break;            case 'n':$op3 = "selected";                break;            default : $op2 = "selected";        }        $combo = "<select name='usu_activo' id='usu_activo'>";        $combo.="<option value='s' $op2>Activos</option>";        $combo.="<option value='n' $op3>Inactivos</option>";        $combo.="<option value='t' $op1>Todos</option>";        $combo.="</select>";        return $combo;    }    public function rel_usu_areas_mdl($usu_id) {        $html = "<select name='rel_area_usuarios[]' id='rel_multiple' multiple='multiple' class='searchable'>";        $query = $this->db->get('admin_areas'); //NO EXISTE ESTA TABLA        if ($query->num_rows() > 0) {            foreach ($query->result() as $fila) {                $are_id = $fila->id;                $this->db->where("are_id", $are_id);                $this->db->where('usu_id', $usu_id);                $query1 = $this->db->get('rel_usua_area');                if ($query1->num_rows() > 0)                    $fila->selected = "selected";                else                    $fila->selected = "";                $html .= $this->parser->parse('usuarios/cmb_usuario_areas', $fila, TRUE);            }        }        return $html . "</select>";    }    public function alm_rel_usu_areas_mdl() {        $rel_usu_areas = $this->input->post('rel_area_usuarios');        $usu_id = $this->input->post('usu_id');        $this->db->where('usu_id', $usu_id);        $this->db->delete('rel_usua_area');        if ($rel_usu_areas != "") {            foreach ($rel_usu_areas as $are_id) {                $arr = array("are_id" => $are_id, "usu_id" => $usu_id);                $this->db->insert('rel_usua_area', $arr);            }        }    }    public function cmb_usuarios_mdl($usu_id = '', $are_id = '', $name = '') {        $select = "<select name='$name' id='$name'><option value=''>Usuarios:</option>";        $sql = "SELECT * FROM admin_usuarios where id in(select usu_id FROM rel_usua_area where are_id = $are_id) and usu_activo='s'";        $query = $this->db->query($sql);        if ($query->num_rows() > 0) {            foreach ($query->result() as $fila) {                if ($fila->id == $usu_id)                    $checked = "checked";                else                    $checked = "";                $select.="<option value='$fila->id' $checked>$fila->usu_apellidos $fila->usu_nombres</option>";            }        }        $select.="</select>";        return $select;    }    public function buscar_usuario() {        $email = $this->input->post('email');        if ($email != '') {            $this->db->where('usu_email', $email);            $query = $this->db->get('admin_usuarios');            $cantidad = $query->num_rows();            if ($cantidad != 0) {                $id = $query->row()->id;                return "<a href='" . base_url() . "admin/usuarios/modificar_usuario/$id'>Ver usuario</a>";            } else                return "no";        } else            return "no";    }    public function buscar_usuario2() {        $email = $this->input->post('email');        $usu_id = $this->input->post('usu_id');        if ($email != '') {            $sql = "SELECT * FROM `admin_usuarios` WHERE `usu_email` like '$email' AND `id` = '$usu_id'";            $query = $this->db->query($sql);            $cantidad = $query->num_rows();            if ($cantidad != 0) {                $var = "no";            } else {                $sql2 = "SELECT * FROM `admin_usuarios` WHERE `usu_email` like '$email' ";                $query2 = $this->db->query($sql2);                $cantidad2 = $query2->num_rows();                if ($cantidad2 != 0)                    $var = "si";                else                    $var = "no";            }        } else            $var = "no";        return $var;    }//buscar fulltext    public function combo_usuarios_mdl($usu_id = '', $w_buscar = '', $name = 'usu_id') {        $select = "<select name='$name' id='$name' class='chosen-select'><option value=''>Usuarios:</option>";        if ($w_buscar == "")            $sql = "SELECT * FROM admin_usuarios WHERE `usu_activo`='s' ORDER BY `usu_nombres` LIMIT 0,10";        else {            $campos = "`usu_nombres`,`usu_apellidos`,`usu_email`";            $where = "WHERE MATCH ($campos) AGAINST ('$w_buscar' IN BOOLEAN MODE)";            $order_by = "ORDER BY `puntos` DESC";            $sql = "SELECT *, MATCH($campos) AGAINST ('$w_buscar') AS 'puntos' from `admin_usuarios` $where AND `usu_activo`='s' $order_by LIMIT 0,10";        }        $query = $this->db->query($sql);        if ($query->num_rows() > 0) {            foreach ($query->result() as $fila) {                if ($fila->id == $usu_id)                    $selected = "selected";                else                    $selected = "";                $select.="<option value='$fila->id' $selected>" . nomApeUsuario($fila->id) . "</option>";            }        }        $select.="</select>";        return $select;    }    public function nuevo_combo_mdl($usu_id = '', $w_buscar = '') {        $data = array();        if (strlen($w_buscar) > 3) {            $campos = "`usu_nombres`,`usu_apellidos`,`usu_email`";            $where = "WHERE MATCH ($campos) AGAINST ('$w_buscar' IN BOOLEAN MODE)";            $order_by = "ORDER BY `puntos` DESC";            $sql = "SELECT *, MATCH($campos) AGAINST ('$w_buscar') AS 'puntos' from `admin_usuarios` $where AND `usu_activo`='s' $order_by LIMIT 0,10";        } else {            $sql = "SELECT * FROM `admin_usuarios` WHERE `usu_activo`='s' ORDER BY `usu_nombres` LIMIT 0,10";        }        $query = $this->db->query($sql);        if ($query->num_rows() > 0) {            $data = array();            foreach ($query->result() as $fila) {                $data[] = array('value' => $fila->id, 'caption' => nomApeUsuario($fila->id));            }        }        return $data;    }}